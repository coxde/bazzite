name: Build ISO
on:
    workflow_dispatch:

env:
    IMAGE_NAME: '${{ github.event.repository.name }}'
    IMAGE_DESC: 'My Customized Bazzite Image'
    IMAGE_VENDOR: ${{ github.repository_owner }}
    IMAGE_REGISTRY: 'ghcr.io/${{ github.repository_owner }}'
    FEDORA_VERSION: '41'

concurrency:
    group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-iso
    cancel-in-progress: true

jobs:
    build-iso:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write
        strategy:
            fail-fast: false
        steps:
            - name: Free Disk Space (Ubuntu)
              uses: jlumbroso/free-disk-space@v1.3.1

            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Set Image Tag
              id: generate-tag
              shell: bash
              run: |
                  TAG="latest"
                  echo "tag=${TAG}" >> $GITHUB_OUTPUT

            - name: Set Flatpaks Directory Shortname
              id: generate-flatpak-dir-shortname
              shell: bash
              run: |
                  FLATPAK_DIR_SHORTNAME="installer/flatpaks"

                  echo "flatpak-dir-shortname=${FLATPAK_DIR_SHORTNAME}" >> $GITHUB_OUTPUT

            # Docker requires lowercase registry references
            - name: Lowercase Registry
              id: registry_case
              uses: ASzc/change-string-case-action@v6
              with:
                  string: ${{ env.IMAGE_REGISTRY }}

            - name: Determine Flatpak Dependencies
              id: flatpak_dependencies
              shell: bash
              run: |
                  set -ex
                  image="${{ steps.registry_case.outputs.lowercase }}/${{ env.IMAGE_NAME }}:${{ steps.generate-tag.outputs.tag }}"

                  # Make temp space
                  TEMP_FLATPAK_INSTALL_DIR=$(mktemp -d -p ${{ github.workspace }} flatpak.XXX)

                  # Get list of refs from directory
                  FLATPAK_REFS_DIR=${{ github.workspace }}/${{ steps.generate-flatpak-dir-shortname.outputs.flatpak-dir-shortname }}
                  FLATPAK_REFS_DIR_LIST=$(cat ${FLATPAK_REFS_DIR}/* | tr '\n' ' ' )

                  # Generate install script
                  cat << EOF > ${TEMP_FLATPAK_INSTALL_DIR}/script.sh
                  cat /temp_flatpak_install_dir/script.sh
                  mkdir -p /flatpak/flatpak /flatpak/triggers
                  mkdir /var/tmp || true
                  chmod -R 1777 /var/tmp
                  flatpak config --system --set languages "*"
                  flatpak remote-add --system flathub https://flathub.org/repo/flathub.flatpakrepo
                  flatpak install --system -y ${FLATPAK_REFS_DIR_LIST}
                  ostree refs --repo=\${FLATPAK_SYSTEM_DIR}/repo | grep '^deploy/' | grep -v 'org\.freedesktop\.Platform\.openh264' | sed 's/^deploy\///g' > /output/flatpaks_with_deps
                  EOF

                  docker run --rm --privileged \
                    --entrypoint bash \
                    -e FLATPAK_SYSTEM_DIR=/flatpak/flatpak \
                    -e FLATPAK_TRIGGERSDIR=/flatpak/triggers \
                    --volume ${FLATPAK_REFS_DIR}:/output \
                    --volume ${TEMP_FLATPAK_INSTALL_DIR}:/temp_flatpak_install_dir \
                    ${image} /temp_flatpak_install_dir/script.sh
                  docker rmi ${image}

            - name: Setup Bazzite Repo
              id: setup-bazzite-repo
              shell: bash
              run: |
                  curl -Lo ${{ github.workspace }}/bazzite.repo https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/repo/fedora-${{ env.FEDORA_VERSION }}/kylegospo-bazzite-fedora-${{ env.FEDORA_VERSION }}.repo

            - name: Build ISO
              uses: jasonn3/build-container-installer@v1.2.4
              id: build
              with:
                  arch: x86_64
                  image_name: ${{ env.IMAGE_NAME }}
                  image_repo: ${{ steps.registry_case.outputs.lowercase }}
                  variant: 'Kinoite'
                  version: ${{ env.FEDORA_VERSION }}
                  image_tag: ${{ steps.generate-tag.outputs.tag }}
                  secure_boot_key_url: '${{ github.server_url }}/${{ github.repository }}/raw/main/secure_boot.der'
                  enrollment_password: 'universalblue'
                  iso_name: ${{ env.IMAGE_NAME }}-${{ steps.generate-tag.outputs.tag }}.iso
                  enable_cache_dnf: 'false'
                  enable_cache_skopeo: 'false'
                  flatpak_remote_refs_dir: ${{ steps.generate-flatpak-dir-shortname.outputs.flatpak-dir-shortname }}
                  enable_flatpak_dependencies: 'false'
                  extra_boot_params: ${{ steps.generate-extra-params.outputs.extra-boot-params }}
                  additional_templates: '/github/workspace/installer/lorax_templates/remove_root_password_prompt.tmpl'
                  repos: '/github/workspace/bazzite.repo /etc/yum.repos.d/fedora.repo /etc/yum.repos.d/fedora-updates.repo'

            - name: Move ISO to Upload Directory
              id: upload-directory
              shell: bash
              run: |
                  ISO_UPLOAD_DIR=${{ github.workspace }}/upload
                  mkdir ${ISO_UPLOAD_DIR}
                  mv ${{ steps.build.outputs.iso_path }}/${{ steps.build.outputs.iso_name }} ${ISO_UPLOAD_DIR}
                  mv ${{ steps.build.outputs.iso_path }}/${{ steps.build.outputs.iso_name }}-CHECKSUM ${ISO_UPLOAD_DIR}
                  echo "iso-upload-dir=${ISO_UPLOAD_DIR}" >> $GITHUB_OUTPUT

            - name: Upload ISO and Checksum to Job Artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ env.IMAGE_NAME }}-${{ steps.generate-tag.outputs.tag }}-${{ env.FEDORA_VERSION}}
                  path: ${{ steps.upload-directory.outputs.iso-upload-dir }}
                  if-no-files-found: error
                  retention-days: 0
                  compression-level: 0
                  overwrite: true
